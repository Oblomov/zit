zit(1)
======
:doctype: manpage


NAME
----
zit - Track single files using git

SYNOPSIS
--------
*zit* 'COMMAND' 'FILE' ['ARGS'...]

DESCRIPTION
-----------
Zit is the Git-based single-file content tracker. It is a spiritual
successor to RCS, allowing the entire Git command set and power, with
a very minimal set of commands to learn and use over Git.

Zit is useful when you desire to track individual documents in a
version control system, but without the need to store them in
independent directories. In a nutshell, Zit wraps around Git, hiding
the complexities of changing environment variables as otherwise would
be required to individual files with Git.

Zit has two supported locations for storing repositories: either in
the current directory, or a *.zit* directory under the current
directory.

COMMANDS
--------
*clone 'REPO' ['FILE']*::
  Create and track 'FILE', retrieving its history from repository
  'REPO'. 'FILE' is guessed by stripping the `.git' suffix from the
  last path component.

*import 'FILE'*::
  Imports history from an RCS-tracked file. Requires rcs-fast-export.

*init*::
  Synonym for *track*.

*list*::
  Synonym for *tracked*.

*track 'FILE'*::
  Starts tracking changes to 'FILE', opening an editor for the
  starting commit message.

*tracked*::
  Show tracked files, with a one-letter prefix indicating their
  status:
    * H  Cached
    * M  Unmerged
    * R  Removed/Deleted
    * C  Modified/Changed
    * K  To be killed
    * ?  Other

*view 'FILE'*::
  Browse 'FILE''s history, with gitk if possible, or tig.

*with 'FILE' 'COMMAND' 'args'...*::
  Run Git 'COMMAND' after setting up the environment for 'FILE',
  allowing you to use the full set of Git commands easily.

SEE ALSO
--------
git(1)
